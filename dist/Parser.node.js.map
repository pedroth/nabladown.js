{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Utils.js","webpack:///external \"@babel/runtime/helpers/esm/toConsumableArray\"","webpack:///./src/Lexer.js","webpack:///./src/Parser.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@babel/runtime/helpers/esm/asyncToGenerator\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pair","a","b","left","right","stream","stringOrArray","array","next","slice","peek","hasNext","length","isEmpty","toString","map","JSON","stringify","join","filter","predicate","log","console","eatSymbol","symbolPredicate","Error","or","accError","rules","error","returnOne","listOfPredicates","defaultValue","createDefaultEl","input","evalScriptTag","scriptTag","globalEval","eval","srcUrl","attributes","textContent","fetch","then","code","text","Promise","re","_","innerText","asyncForEach","asyncLambdas","asyncLambda","isParagraph","domNode","constructor","document","createElement","require","tokenRepeatLessThan","symbol","repeat","auxStream","textArray","push","finalN","type","tokenSymbol","sym","tokenText","keyWords","token","includes","parse","string","parseProgram","parseTitle","Title","nextStream","parseList","List","list","parseSeq","Seq","parseStatement","Statement","parseExpression","expression","program","nextNextStream","charStream","acc","tokenizer","level","stream1","stream2","children","parseListItem","ListItem","stream3","parseSeqTypes","SeqTypes","parseFormula","Formula","parseHtml","Html","parseCode","Code","parseLinkStat","LinkStat","next3Stream","parseAnyBut","AnyBut","next4Stream","link","parseLink","Link","parseMedia","Media","parseItalic","Italic","parseBold","Bold","parseSingle","Single","parseText","Text","nextToken","equation","isInline","html","lineCodeTokenPredicate","parseLineCode","LineCode","languageAnyBut","language","parseBlockCode","BlockCode","tokenPredicate","parseLinkType","LinkType"],"mappings":"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","file":"Parser.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","//========================================================================================\n/*                                                                                      *\n *                                         UTILS                                        *\n *                                                                                      */\n//========================================================================================\n\n/**\n * creates a pair pair: (a,b) => pair\n * @param {*} a left\n * @param {*} b right\n */\nexport function pair(a, b) {\n  return { left: a, right: b };\n}\n\n/**\n * creates a stream from a string, string => stream\n * @param {*} string\n */\nexport function stream(stringOrArray) {\n  // copy array or string to array\n  const array = [...stringOrArray];\n  return {\n    next: () => stream(array.slice(1)),\n    peek: () => array[0],\n    hasNext: () => array.length >= 1,\n    isEmpty: () => array.length === 0,\n    toString: () =>\n      array.map(s => (typeof s === \"string\" ? s : JSON.stringify(s))).join(\"\"),\n    filter: predicate => stream(array.filter(predicate)),\n    log: () => {\n      let s = stream(array);\n      while (s.hasNext()) {\n        console.log(s.peek());\n        s = s.next();\n      }\n    }\n  };\n}\n\nexport function eatSymbol(n, symbolPredicate) {\n  return function (stream) {\n    if (n === 0) return stream;\n    if (symbolPredicate(stream)) {\n      return eatSymbol(n - 1, symbolPredicate)(stream.next());\n    }\n    throw new Error(\n      `Caught error while eating ${n} symbols`,\n      stream.toString()\n    );\n  };\n}\n\n/**\n *  Select one rule\n * @param  {...any} rules\n */\nexport function or(...rules) {\n  let accError = null;\n  for (let i = 0; i < rules.length; i++) {\n    try {\n      return rules[i]();\n    } catch (error) {\n      accError = error;\n    }\n  }\n  throw accError;\n}\n\n/**\n * Returns a value based on the predicate\n * @param {*} listOfPredicates\n * @param {*} defaultValue\n */\nexport function returnOne(listOfPredicates, defaultValue = createDefaultEl()) {\n  return input => {\n    for (let i = 0; i < listOfPredicates.length; i++) {\n      if (listOfPredicates[i].predicate(input))\n        return listOfPredicates[i].value(input);\n    }\n    return defaultValue;\n  };\n}\n\nexport function evalScriptTag(scriptTag) {\n  const globalEval = eval;\n  const srcUrl = scriptTag?.attributes[\"src\"]?.textContent;\n  if (!!srcUrl) {\n    return fetch(srcUrl)\n      .then(code => code.text())\n      .then(code => {\n        globalEval(code);\n      });\n  } else {\n    return new Promise((re, _) => {\n      globalEval(scriptTag.innerText);\n      re(true);\n    });\n  }\n}\n\nexport async function asyncForEach(asyncLambdas) {\n  for (const asyncLambda of asyncLambdas) {\n    await asyncLambda();\n  }\n}\n\nexport function isParagraph(domNode) {\n  return domNode.constructor.name === \"HTMLParagraphElement\";\n}\n\nexport function createDefaultEl() {\n  return document.createElement(\"div\");\n}\n\nexport function bindAll(obj) {\n  Object.getOwnPropertyNames(Object.getPrototypeOf(obj))\n    .filter(prop => prop === \"constructor\")\n    .forEach(method => (obj[method] = obj[method].bind(obj)));\n}\n","module.exports = require(\"@babel/runtime/helpers/esm/toConsumableArray\");","import { or, pair, stream } from \"./Utils\";\n//========================================================================================\n/*                                                                                      *\n *                                     LEX ANALYSIS                                     *\n *                                                                                      */\n//========================================================================================\n\n//========================================================================================\n/*                                                                                      *\n * Tokens\n * #^{1..6}\n * $^{1..2}\n * \\n\n * [\n * ]\n * (\n * )\n * *^{1..2}\n *                                                                                      */\n//========================================================================================\n\n/**\n * Token := {type: String, text: String}\n *\n * keywords :=  #$][)('\\n'-*`\n * tokens: rep(`, 1..3), rep(+, 3), rep(*, 1..2), rep($,1..2), rep(#,1..6), 'text', ']', '[', '(', ')', '\\n'\n * 'text' := ¬ keywords\n *\n */\n\n/**\n * stream<char> => stream<tokens>\n * @param {*} s:Stream<Chars>\n * @returns Stream<Tokens>\n */\nexport function tokenizer(charStream) {\n  const acc = [];\n  let s = charStream;\n  while (s.hasNext()) {\n    const { left: token, right: next } = or(\n      () => tokenRepeatLessThan(\"#\", 6)(s),\n      () => tokenRepeatLessThan(\"$\", 2)(s),\n      () => tokenRepeatLessThan(\"*\", 2)(s),\n      () => tokenRepeatLessThan(\"+\", 3)(s),\n      () => tokenRepeatLessThan(\"`\", 3)(s),\n      () => tokenSymbol(\"\\n\")(s),\n      () => tokenSymbol(\"[\")(s),\n      () => tokenSymbol(\"]\")(s),\n      () => tokenSymbol(\"(\")(s),\n      () => tokenSymbol(\")\")(s),\n      () => tokenSymbol(\" \")(s),\n      () => tokenSymbol(\" \")(s),\n      () => tokenSymbol(\"-\")(s),\n      () => tokenSymbol(\"!\")(s),\n      () => tokenText(s)\n    );\n    acc.push(token);\n    s = next;\n  }\n  return stream(acc);\n}\n\nexport function tokenRepeatLessThan(symbol, repeat) {\n  return stream => {\n    let n = repeat;\n    let auxStream = stream;\n    let textArray = [];\n    while (auxStream.peek() === symbol && n >= 0) {\n      n--;\n      textArray.push(auxStream.peek());\n      auxStream = auxStream.next();\n    }\n    const finalN = repeat - n;\n    if (finalN > 0) {\n      return pair(\n        { type: symbol, repeat: finalN, text: textArray.join(\"\") },\n        auxStream\n      );\n    }\n    throw new Error(\n      `Error occurred while tokening repeated #${repeat}, with symbol ${symbol} ` +\n        auxStream.toString()\n    );\n  };\n}\n\nexport function tokenSymbol(symbol) {\n  return stream => {\n    const sym = [...symbol];\n    let s = stream;\n    let i = 0;\n    while (i < sym.length) {\n      if (s.peek() === sym[i]) {\n        i++;\n        s = s.next();\n      } else {\n        throw new Error(\n          `Error occurred while tokening unique symbol ${symbol} ` +\n            auxStream.toString()\n        );\n      }\n    }\n    return pair({ type: symbol, repeat: 1, text: symbol }, s);\n  };\n}\n\nexport function tokenText(stream) {\n  const keyWords = [...\"!`*#$[]()\\n \"];\n  const token = [];\n  let s = stream;\n  while (s.hasNext() && !keyWords.includes(s.peek())) {\n    token.push(s.peek());\n    s = s.next();\n  }\n  return pair({ type: \"text\", text: token.join(\"\") }, s);\n}\n","//========================================================================================\n/*                                                                                      *\n *                                        PARSER                                        *\n *                                                                                      */\n//========================================================================================\n\nimport { tokenizer } from \"./Lexer\";\nimport { or, pair, stream, eatSymbol } from \"./Utils\";\n\n/**\n * Grammar\n *\n * Program -> Expression Program / epsilon\n * Expression -> Statement'\\n'\n * Statement -> Title / List / Seq\n * Title -> '#' Seq / '#'Seq\n * List(n) -> (' '^n)ListItem(n) List(n) / epsilon\n * ListItem(n) -> (-|*)Seq'\\n' List(n+1) / (-|*)Seq\n * Seq -> SeqTypes Seq / epsilon\n * SeqTypes -> Formula / Html / Code / Link / Media / Italic / Bold / Text\n * Formula -> '$' AnyBut('$') '$'\n * Html -> '+++' AnyBut('+++') '+++'\n * Code -> LineCode / BlockCode\n * LineCode -> `AnyBut('\\n', '`')`\n * BlockCode-> ```AnyBut('\\n')'\\n' AnyBut('`')```\n * Link -> [LinkStat](AnyBut('\\n', ')'))\n * LinkStat -> LinkTypes LinkStat / epsilon\n * LinkTypes -> Formula / Html / Code / Italic / Bold / Single('\\n', ']')\n * Media -> ![LinkStat](AnyBut('\\n', ')'))\n * Italic -> *SeqTypes*\n * Bold -> **SeqTypes**\n * Text -> AnyBut('$', '+', '`', '[', '*', '\\n') / Single('\\n')\n * AnyBut(s) -> ¬s AnyBut(s) / epsilon\n * Single(s) -> ¬s\n */\n\n/**\n * parse: String => Abstract syntactic tree\n * @param {*} string\n * @returns Parsing Tree\n */\nexport function parse(string) {\n  const charStream = stream(string);\n  const tokenStream = tokenizer(charStream);\n  const program = parseProgram(tokenStream);\n  return program.left;\n}\n\n/**\n * stream => pair(Program, stream)\n *\n * @param {*} stream\n */\nfunction parseProgram(stream) {\n  return or(\n    () => {\n      const { left: expression, right: nextStream } = parseExpression(stream);\n      const { left: program, right: nextNextStream } = parseProgram(nextStream);\n      return pair(\n        {\n          type: \"program\",\n          expression: expression,\n          program: program\n        },\n        nextNextStream\n      );\n    },\n    () => pair({ type: \"program\", expression: null, program: null }, stream)\n  );\n}\n\n/**\n * stream => pair(Expression, stream)\n *\n * @param {*} stream\n */\nfunction parseExpression(stream) {\n  const { left: Statement, right: nextStream } = parseStatement(stream);\n  if (nextStream.peek().type === \"\\n\") {\n    return pair(\n      {\n        type: \"expression\",\n        Statement\n      },\n      nextStream.next()\n    );\n  }\n  throw new Error(\n    \"Error occurred while parsing expression,\" + nextStream.toString()\n  );\n}\n\n/**\n * stream => pair(Statement, stream)\n * @param {*} stream\n */\nfunction parseStatement(stream) {\n  return or(\n    () => {\n      const { left: Title, right: nextStream } = parseTitle(stream);\n      return pair({ type: \"statement\", Title }, nextStream);\n    },\n    () => {\n      const { left: List, right: nextStream } = parseList(0)(stream);\n      if (List.list.length > 0) {\n        return pair({ type: \"statement\", List }, nextStream);\n      }\n      throw new Error(\"Empty list error while parsing statement\");\n    },\n    () => {\n      const { left: Seq, right: nextStream } = parseSeq(stream);\n      return pair({ type: \"statement\", Seq }, nextStream);\n    }\n  );\n}\n\n/**\n *\n * stream => pair(Title, stream)\n * @param {*} stream\n */\nfunction parseTitle(stream) {\n  if (stream.peek().type === \"#\") {\n    const level = stream.peek().repeat;\n    // shortcut in parsing this rule\n    const filterNextSpace =\n      stream.next().peek().type === \" \" ? stream.next().next() : stream.next();\n    const { left: Seq, right: nextStream } = parseSeq(filterNextSpace);\n    return pair({ type: \"title\", Seq, level }, nextStream);\n  }\n  throw new Error(\n    \"Error occurred while parsing Title,\" + nextStream.toString()\n  );\n}\n\n/**\n *\n * n => stream => pair(List, stream)\n * @param {*} stream\n */\nfunction parseList(n) {\n  return function (stream) {\n    return or(\n      () => {\n        const stream1 = eatSymbol(n, s => s.peek().text === \" \")(stream);\n        const { left: ListItem, right: stream2 } = parseListItem(n)(stream1);\n        const { left: List, right: stream3 } = parseList(n)(stream2);\n        return pair(\n          {\n            type: \"list\",\n            list: [ListItem, ...List.list]\n          },\n          stream3\n        );\n      },\n      () => {\n        return pair({ type: \"list\", list: [] }, stream);\n      }\n    );\n  };\n}\n\n/**\n * n => stream => pair(ListItem, stream)\n * @param {*} stream\n */\nfunction parseListItem(n) {\n  return function (stream) {\n    const token = stream.peek().text;\n    if (token === \"-\" || token === \"*\") {\n      const { left: Seq, right: stream1 } = parseSeq(stream.next());\n      const token1 = stream1.peek().text;\n      if (token1 === \"\\n\") {\n        const { left: List, right: stream2 } = parseList(n + 1)(stream1.next());\n        return pair(\n          { type: \"listItem\", Seq, children: [...List.list] },\n          stream2\n        );\n      }\n    }\n    throw new Error(\"Error occurred while parsing ListItem\", stream.toString());\n  };\n}\n\n/**\n *\n * stream => pair(Seq, stream)\n * @param {*} stream\n */\nfunction parseSeq(stream) {\n  return or(\n    () => {\n      const { left: SeqTypes, right: nextStream } = parseSeqTypes(stream);\n      const { left: Seq, right: nextNextStream } = parseSeq(nextStream);\n      return pair({ type: \"seq\", SeqTypes, Seq }, nextNextStream);\n    },\n    () => pair({ type: \"seq\", isEmpty: true }, stream)\n  );\n}\n\n/**\n *\n * stream => pair(SeqTypes, stream)\n * @param {*} stream\n */\nfunction parseSeqTypes(stream) {\n  return or(\n    () => {\n      const { left: Formula, right: nextStream } = parseFormula(stream);\n      return pair({ type: \"seqTypes\", Formula }, nextStream);\n    },\n    () => {\n      const { left: Html, right: nextStream } = parseHtml(stream);\n      return pair({ type: \"seqTypes\", Html }, nextStream);\n    },\n    () => {\n      const { left: Code, right: nextStream } = parseCode(stream);\n      return pair({ type: \"seqTypes\", Code }, nextStream);\n    },\n    () => {\n      const { left: Link, right: nextStream } = parseLink(stream);\n      return pair({ type: \"seqTypes\", Link }, nextStream);\n    },\n    () => {\n      const { left: Media, right: nextStream } = parseMedia(stream);\n      return pair({ type: \"seqTypes\", Media }, nextStream);\n    },\n    () => {\n      const { left: Italic, right: nextStream } = parseItalic(stream);\n      return pair({ type: \"seqTypes\", Italic }, nextStream);\n    },\n    () => {\n      const { left: Bold, right: nextStream } = parseBold(stream);\n      return pair({ type: \"seqTypes\", Bold }, nextStream);\n    },\n    () => {\n      const { left: Text, right: nextStream } = parseText(stream);\n      return pair({ type: \"seqTypes\", Text }, nextStream);\n    }\n  );\n}\n\n/**\n *\n * stream => pair(Text, stream)\n * @param {*} stream\n */\nfunction parseText(stream) {\n  return or(\n    () => {\n      const { left: AnyBut, right: nextStream } = parseAnyBut(t =>\n        [\"$\", \"+\", \"`\", \"[\", \"*\", \"\\n\"].includes(t.type)\n      )(stream);\n      if (AnyBut.textArray.length > 0) {\n        return pair(\n          { type: \"text\", text: AnyBut.textArray.join(\"\") },\n          nextStream\n        );\n      }\n      throw new Error(\"Error occurred while parsing Text,\" + stream.toString());\n    },\n    () => {\n      const { left: Single, right: nextStream } = parseSingle(\n        t => t.type === \"\\n\"\n      )(stream);\n      return pair({ type: \"text\", text: Single.text }, nextStream);\n    }\n  );\n}\n\n/**\n *\n * stream => pair(Italic, stream)\n * @param {*} stream\n */\nfunction parseItalic(stream) {\n  const token = stream.peek();\n  if (token.type === \"*\" && token.repeat === 1) {\n    const { left: SeqTypes, right: nextStream } = parseSeqTypes(stream.next());\n    const nextToken = nextStream.peek();\n    if (nextToken.type === \"*\" && nextToken.repeat === 1) {\n      return pair({ type: \"italic\", SeqTypes }, nextStream.next());\n    }\n  }\n  throw new Error(\n    \"Error occurred while parsing Italic,\" + nextStream.toString()\n  );\n}\n\n/**\n *\n * stream => pair(Bold, stream)\n * @param {*} stream\n */\nfunction parseBold(stream) {\n  const token = stream.peek();\n  if (token.type === \"*\" && token.repeat === 2) {\n    const { left: SeqTypes, right: nextStream } = parseSeqTypes(stream.next());\n    const nextToken = nextStream.peek();\n    if (nextToken.type === \"*\" && nextToken.repeat === 2) {\n      return pair({ type: \"bold\", SeqTypes }, nextStream.next());\n    }\n  }\n  throw new Error(\n    \"Error occurred while parsing Italic,\" + nextStream.toString()\n  );\n}\n\n/**\n *\n * stream => pair(Formula, stream)\n * @param {*} stream\n */\nfunction parseFormula(stream) {\n  const token = stream.peek();\n  const repeat = token.repeat;\n  const error = new Error(\n    \"Error occurred while parsing Formula,\" + stream.toString()\n  );\n  if (token.type === \"$\") {\n    const { left: AnyBut, right: nextStream } = parseAnyBut(token =>\n      [\"$\"].includes(token.type)\n    )(stream.next());\n    const nextToken = nextStream.peek();\n    if (nextToken.type === \"$\" && nextToken?.repeat === repeat) {\n      return pair(\n        {\n          type: \"formula\",\n          equation: AnyBut.textArray.join(\"\"),\n          isInline: nextToken?.repeat === 1\n        },\n        nextStream.next()\n      );\n    }\n  }\n  throw error;\n}\n\n/**\n *\n * stream => pair(Html, stream)\n * @param {*} stream\n */\nfunction parseHtml(stream) {\n  const token = stream.peek();\n  const repeat = token.repeat;\n  const error = new Error(\n    \"Error occurred while parsing Html,\" + stream.toString()\n  );\n  if (token.type === \"+\" && repeat === 3) {\n    const { left: AnyBut, right: nextStream } = parseAnyBut(\n      token => [\"+\"].includes(token.type) && 3 === token?.repeat\n    )(stream.next());\n    const nextToken = nextStream.peek();\n    if (nextToken.type === \"+\" && nextToken?.repeat === repeat) {\n      return pair(\n        {\n          type: \"html\",\n          html: AnyBut.textArray.join(\"\")\n        },\n        nextStream.next()\n      );\n    }\n  }\n  throw error;\n}\n\n/**\n *\n * stream => pair(Code, stream)\n * @param {*} stream\n */\nfunction parseCode(stream) {\n  return or(\n    () => {\n      const { left: LineCode, right: nextStream } = parseLineCode(stream);\n      return pair({ type: \"code\", LineCode }, nextStream);\n    },\n    () => {\n      const { left: BlockCode, right: nextStream } = parseBlockCode(stream);\n      return pair({ type: \"code\", BlockCode }, nextStream);\n    }\n  );\n}\n\n/**\n *\n * stream => pair(LineCode, stream)\n * @param {*} stream\n */\nfunction parseLineCode(stream) {\n  const lineCodeTokenPredicate = t => t.type === \"`\" && t.repeat === 1;\n  const token = stream.peek();\n  if (lineCodeTokenPredicate(token)) {\n    const { left: AnyBut, right: nextStream } = parseAnyBut(\n      t => lineCodeTokenPredicate(t) || t.type === \"\\n\"\n    )(stream.next());\n    if (lineCodeTokenPredicate(nextStream.peek())) {\n      return pair(\n        { type: \"lineCode\", code: AnyBut.textArray.join(\"\") },\n        nextStream.next()\n      );\n    }\n  }\n  throw new Error(\"Error occurred while parsing LineCode,\" + stream.toString());\n}\n\n/**\n *\n * stream => pair(BlockCode, stream)\n * @param {*} stream\n */\nfunction parseBlockCode(stream) {\n  const lineCodeTokenPredicate = t => t.type === \"`\" && t.repeat === 3;\n  const token = stream.peek();\n  if (lineCodeTokenPredicate(token)) {\n    const { left: languageAnyBut, right: nextStream } = parseAnyBut(\n      t => t.type === \"\\n\"\n    )(stream.next());\n    const { left: AnyBut, right: nextNextStream } = parseAnyBut(\n      lineCodeTokenPredicate\n    )(nextStream.next());\n    if (lineCodeTokenPredicate(nextNextStream.peek())) {\n      return pair(\n        {\n          type: \"blockCode\",\n          code: AnyBut.textArray.join(\"\"),\n          language: languageAnyBut.textArray.join(\"\")\n        },\n        nextNextStream.next()\n      );\n    }\n  }\n  throw new Error(\n    \"Error occurred while parsing BlockCode,\" + stream.toString()\n  );\n}\n\n/**\n *\n * (token => boolean) => stream => pair(AnyBut, stream)\n * @param {*} tokenPredicate: token => boolean\n */\nfunction parseAnyBut(tokenPredicate) {\n  return stream => {\n    return or(\n      () => {\n        const peek = stream.peek();\n        if (!tokenPredicate(peek)) {\n          const { left: AnyBut, right: nextStream } = parseAnyBut(\n            tokenPredicate\n          )(stream.next());\n          return pair(\n            { type: \"anyBut\", textArray: [peek.text, ...AnyBut.textArray] },\n            nextStream\n          );\n        }\n        throw new Error(\n          \"Error occurred while parsing AnyBut,\" + stream.toString()\n        );\n      },\n      () => pair({ type: \"anyBut\", textArray: [] }, stream)\n    );\n  };\n}\n\n/**\n *\n * stream => pair(Link, stream)\n * @param {*} stream\n */\nfunction parseLink(stream) {\n  // ugly\n  if (stream.peek().type === \"[\") {\n    const nextStream = stream.next();\n    const { left: LinkStat, right: nextNextStream } = parseLinkStat(nextStream);\n    if (nextNextStream.peek().type === \"]\") {\n      const next3Stream = nextNextStream.next();\n      if (next3Stream.peek().type === \"(\") {\n        const { left: AnyBut, right: next4Stream } = parseAnyBut(token =>\n          [\"\\n\", \")\"].includes(token.type)\n        )(next3Stream.next());\n        if (next4Stream.peek().type === \")\") {\n          return pair(\n            { type: \"link\", LinkStat, link: AnyBut.textArray.join(\"\") },\n            next4Stream.next()\n          );\n        }\n      }\n    }\n  }\n  throw new Error(\"Error occurred while parsing Link,\" + stream.toString());\n}\n\n/**\n *\n * stream => pair(Media, stream)\n * @param {*} stream\n */\nfunction parseMedia(stream) {\n  // ugly\n  if (stream.peek().type === \"!\") {\n    const nextStream = stream.next();\n    if (nextStream.peek().type === \"[\") {\n      const { left: LinkStat, right: nextNextStream } = parseLinkStat(\n        nextStream.next()\n      );\n      if (nextNextStream.peek().type === \"]\") {\n        const next3Stream = nextNextStream.next();\n        if (next3Stream.peek().type === \"(\") {\n          const { left: AnyBut, right: next4Stream } = parseAnyBut(token =>\n            [\"\\n\", \")\"].includes(token.type)\n          )(next3Stream.next());\n          if (next4Stream.peek().type === \")\") {\n            return pair(\n              { type: \"media\", LinkStat, link: AnyBut.textArray.join(\"\") },\n              next4Stream.next()\n            );\n          }\n        }\n      }\n    }\n  }\n  throw new Error(\"Error occurred while parsing Link,\" + stream.toString());\n}\n\n/**\n * stream => pair(LinkStat, stream)\n * @param {*} stream\n */\nfunction parseLinkStat(stream) {\n  return or(\n    () => {\n      const { left: LinkType, right: nextStream } = parseLinkType(stream);\n      const { left: LinkStat, right: nextNextStream } = parseLinkStat(\n        nextStream\n      );\n      return pair({ type: \"linkStat\", LinkType, LinkStat }, nextNextStream);\n    },\n    () => pair({ type: \"linkStat\", isEmpty: true }, stream)\n  );\n}\n\n/**\n * stream => pair(LinkType, stream)\n * @param {*} stream\n */\nfunction parseLinkType(stream) {\n  return or(\n    () => {\n      const { left: Formula, right: nextStream } = parseFormula(stream);\n      return pair({ type: \"linkType\", Formula }, nextStream);\n    },\n    () => {\n      const { left: Html, right: nextStream } = parseHtml(stream);\n      return pair({ type: \"linkType\", Html }, nextStream);\n    },\n    () => {\n      const { left: Code, right: nextStream } = parseCode(stream);\n      return pair({ type: \"linkType\", Code }, nextStream);\n    },\n    () => {\n      const { left: Italic, right: nextStream } = parseItalic(stream);\n      return pair({ type: \"linkType\", Italic }, nextStream);\n    },\n    () => {\n      const { left: Bold, right: nextStream } = parseBold(stream);\n      return pair({ type: \"linkType\", Bold }, nextStream);\n    },\n    () => {\n      const { left: Single, right: nextStream } = parseSingle(token =>\n        [\"\\n\", \"]\"].includes(token.type)\n      )(stream);\n      return pair({ type: \"linkType\", Single }, nextStream);\n    }\n  );\n}\n\n/**\n *\n * (token => boolean) => stream => pair(Single, stream)\n * @param {*} tokenPredicate: token => boolean\n */\nfunction parseSingle(tokenPredicate) {\n  return stream => {\n    const token = stream.peek();\n    if (!tokenPredicate(token)) {\n      const text = token.text || \"\";\n      return pair({ type: \"single\", text: text }, stream.next());\n    }\n    throw new Error(\"Error occurred while parsing Single,\" + stream.toString());\n  };\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/esm/asyncToGenerator\");"],"sourceRoot":""}